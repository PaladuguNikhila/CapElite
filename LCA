/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode recur(TreeNode root,TreeNode k,TreeNode m){
        if(root==null){
            return null;
        }
        if(root.val == k.val || root.val == m.val){
            return root;
        }
        TreeNode l1=recur(root.left,k,m);
        TreeNode l2=recur(root.right,k,m);
        if(l1 != null && l2 !=null){
            return root;
        }
        else if(l1 != null){
            return l1;
        }
        else{
            return l2;
        }
    }
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        return recur(root,p,q);
        
    }
}
